<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–õ–µ–Ω—Ç–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π</title>
  <script src="https://telegram.org/js/telegram-web-app.js"></script>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f5f5f5;
      color: #333;
    }
    .container {
      max-width: 100%;
      padding: 10px;
    }
    .filter-box {
      background: #ffffff;
      border-radius: 12px;
      padding: 15px;
      margin-bottom: 15px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    .feed-item {
      background: white;
      border-radius: 12px;
      margin-bottom: 15px;
      padding: 15px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    .feed-header {
      display: flex;
      justify-content: space-between;
      margin-bottom: 10px;
    }
    .event-type {
      background: #4e7cff;
      color: white;
      padding: 3px 8px;
      border-radius: 6px;
      font-size: 12px;
      font-weight: bold;
    }
    .event-date {
      color: #666;
      font-size: 13px;
    }
    .event-title {
      font-size: 18px;
      font-weight: bold;
      margin-bottom: 8px;
      color: #222;
    }
    .event-description {
      margin-bottom: 12px;
      line-height: 1.4;
    }
    .event-details {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-bottom: 10px;
    }
    .detail-item {
      display: flex;
      align-items: center;
      font-size: 14px;
    }
    .detail-icon {
      margin-right: 5px;
      color: #4e7cff;
    }
    .event-link {
      display: inline-block;
      background: #4e7cff;
      color: white;
      padding: 8px 15px;
      border-radius: 6px;
      text-decoration: none;
      font-weight: bold;
      margin-top: 5px;
    }
    .event-link:hover {
      background: #3a6bf0;
    }
    .loader {
      text-align: center;
      padding: 30px;
      font-size: 16px;
      color: #666;
    }
    .price-tag {
      background: #28a745;
      color: white;
      padding: 3px 8px;
      border-radius: 6px;
      font-size: 12px;
      font-weight: bold;
    }
    .free-price {
      background: #6c757d;
    }
  </style>
</head>
<body>
  <div class="container">
    <button id="toggle-filters" style="margin-bottom: 10px; padding: 10px 15px; background-color: #4e7cff; color: white; border: none; border-radius: 8px; font-weight: bold; font-size: 16px;">–ü–æ–∏—Å–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π</button>

	<div class="filter-box" id="filter-box" style="display: none;">
		<form id="filter-form">

			<label>
			  –î–∞—Ç–∞ –æ—Ç:
			  <input type="date" id="filter-date-from" style="margin-bottom: 10px;">
			</label><br>
			<label>
			  –î–∞—Ç–∞ –¥–æ:
			  <input type="date" id="filter-date-to" style="margin-bottom: 10px;">
			</label><br>
			<label>
			  –¢–∏–ø:
			  <select id="filter-type" style="margin-bottom: 10px;"></select>
			</label><br>
			<label>
			  –ü–æ–¥—Ç–∏–ø:
			  <select id="filter-subtype" style="margin-bottom: 10px;"></select>
			</label><br>
			<label>
			  –¶–µ–Ω–∞:
			  <select id="filter-price" style="margin-bottom: 10px;">
				<option value="">–õ—é–±–∞—è</option>
				<option value="–ë–µ—Å–ø–ª–∞—Ç–Ω–æ">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</option>
				<option value="–ü–ª–∞—Ç–Ω–æ">–ü–ª–∞—Ç–Ω–æ</option>
			  </select>
			</label><br>
			<button type="submit">–ü—Ä–∏–º–µ–Ω–∏—Ç—å</button>
      </form>
    </div>

    <div id="loader" class="loader">–ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π...</div>
    <div id="feed-container"></div>
  </div>

  <script>
    const tg = window.Telegram.WebApp;
    tg.expand();
    tg.enableClosingConfirmation();

    const SHEET_URL = "https://opensheet.elk.sh/1kgVNeX9LBgomEXl9211qlcB9nDMdtyHVV56YDbB7Y1o/–õ–∏—Å—Ç1";

    const icons = {
      location: 'üìç',
      calendar: 'üìÖ',
      price: 'üí∞'
    };

    let allEvents = [];

    async function loadData() {
      try {
        const response = await fetch(SHEET_URL);
        if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
        const data = await response.json();
        if (data.length === 0) throw new Error('–ù–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        allEvents = data;
        populateFilters(data);
        displayFeed(data);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        document.getElementById('loader').textContent = error.message;
      }
    }

    function populateFilters(data) {
      const typeSet = new Set();
      const subtypeSet = new Set();

      data.forEach(event => {
        if (event.–¢–∏–ø) typeSet.add(event.–¢–∏–ø);
        if (event.–ü–æ–¥—Ç–∏–ø) subtypeSet.add(event.–ü–æ–¥—Ç–∏–ø);
      });

      const typeSelect = document.getElementById('filter-type');
      const subtypeSelect = document.getElementById('filter-subtype');

      typeSelect.innerHTML = '<option value="">–õ—é–±–æ–π</option>';
      subtypeSelect.innerHTML = '<option value="">–õ—é–±–æ–π</option>';

      [...typeSet].forEach(type => {
        typeSelect.innerHTML += `<option value="${type}">${type}</option>`;
      });

      [...subtypeSet].forEach(subtype => {
        subtypeSelect.innerHTML += `<option value="${subtype}">${subtype}</option>`;
      });
    }

    function displayFeed(events) {
      const feedContainer = document.getElementById('feed-container');
      feedContainer.innerHTML = '';

      events.forEach(event => {
        const priceClass = event.–¶–µ–Ω–∞ === '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' ? 'free-price' : '';
        const eventElement = document.createElement('div');
        eventElement.className = 'feed-item';
        eventElement.innerHTML = `
          <div class="feed-header">
              <span class="event-type">${event.–¢–∏–ø || '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ'}</span>
              <span class="event-date">${event.–î–∞—Ç–∞ || ''}</span>
          </div>
          <h3 class="event-title">${event.–û–ø–∏—Å–∞–Ω–∏–µ || '–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'}</h3>
          <div class="event-description">${event.–ü–æ–¥—Ç–∏–ø || ''}</div>
          <div class="event-details">
              <div class="detail-item">
                  <span class="detail-icon">${icons.location}</span>
                  ${event.–ì–æ—Ä–æ–¥ || '–ì–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω'}
              </div>
              <div class="detail-item">
                  <span class="detail-icon">${icons.calendar}</span>
                  ${event.–î–∞—Ç–∞ || '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
              </div>
              <div class="detail-item">
                  <span class="detail-icon">${icons.price}</span>
                  <span class="price-tag ${priceClass}">${event.–¶–µ–Ω–∞ || '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
              </div>
          </div>
          ${event.–°—Å—ã–ª–∫–∞ ? `<a href="${event.–°—Å—ã–ª–∫–∞}" class="event-link" target="_blank">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>` : ''}
        `;
        feedContainer.appendChild(eventElement);
      });

      document.getElementById('loader').style.display = 'none';
    }

    document.getElementById('filter-form').addEventListener('submit', function(e) {
      e.preventDefault();
      const startDate = document.getElementById('filter-date-from').value;
      const endDate = document.getElementById('filter-date-to').value;
      const type = document.getElementById('filter-type').value;
      const subtype = document.getElementById('filter-subtype').value;
      const price = document.getElementById('filter-price').value;

      const filtered = allEvents.filter(event => {
        const eventDate = event.–î–∞—Ç–∞ ? new Date(event.–î–∞—Ç–∞) : null;
        const matchDate =
          (!startDate || (eventDate && eventDate >= new Date(startDate))) &&
          (!endDate || (eventDate && eventDate <= new Date(endDate)));

        const matchType = !type || event.–¢–∏–ø === type;
        const matchSubtype = !subtype || event.–ü–æ–¥—Ç–∏–ø === subtype;
        const matchPrice =
          !price ||
          (price === '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' && event.–¶–µ–Ω–∞ === '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ') ||
          (price === '–ü–ª–∞—Ç–Ω–æ' && event.–¶–µ–Ω–∞ !== '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ');

        return matchDate && matchType && matchSubtype && matchPrice;
      });

      displayFeed(filtered);
    });

    loadData();
  </script>
</body>
</html>
